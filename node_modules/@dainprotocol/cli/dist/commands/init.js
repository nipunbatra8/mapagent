"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = init;
var fs_extra_1 = __importDefault(require("fs-extra"));
var path_1 = __importDefault(require("path"));
var utils_1 = require("../utils");
var ora_1 = __importDefault(require("ora"));
function init(projectName) {
    var spinner = (0, ora_1.default)('Initializing Dain project...').start();
    var projectDir = path_1.default.join(process.cwd(), projectName);
    var templateDir = path_1.default.join(__dirname, '..', '..', 'templates', 'default');
    try {
        // Check Node.js version
        var nodeVersion = process.version;
        var versionNum = Number(nodeVersion.slice(1).split('.')[0]);
        if (versionNum < 20) {
            spinner.fail('Node.js version 20.7 or higher is required');
            (0, utils_1.logError)('Please upgrade Node.js to version 20.7 or higher');
            (0, utils_1.logInfo)('You can download it from: https://nodejs.org/');
            process.exit(1);
        }
        // Check if directory already exists
        if (fs_extra_1.default.existsSync(projectDir)) {
            spinner.fail("Directory ".concat(projectName, " already exists"));
            process.exit(1);
        }
        // Create project directory
        fs_extra_1.default.ensureDirSync(projectDir);
        // Copy template files
        fs_extra_1.default.copySync(templateDir, projectDir);
        // Modify package.json
        var packageJsonPath = path_1.default.join(projectDir, 'package.json');
        var packageJson = fs_extra_1.default.readJsonSync(packageJsonPath);
        packageJson.name = projectName;
        fs_extra_1.default.writeJsonSync(packageJsonPath, packageJson, { spaces: 2 });
        spinner.succeed("Initialized Dain project: ".concat(projectName));
        (0, utils_1.logSuccess)("Project created at ".concat(projectDir));
        (0, utils_1.logInfo)('Run the following commands to get started:');
        (0, utils_1.logInfo)("  cd ".concat(projectName));
        (0, utils_1.logInfo)('  npm install');
        (0, utils_1.logInfo)('  npm run dev');
        // Explicitly exit with success
        process.exit(0);
    }
    catch (error) {
        spinner.fail('Project initialization failed');
        (0, utils_1.logError)('Error initializing project', error);
        process.exit(1);
    }
}
