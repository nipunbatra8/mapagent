import { BaseUIElement, DSLBuilder } from "../generateUI";
export type UIElement = BaseUIElement<any> | DSLBuilder<any>;
export interface DainResponseOptions {
    data?: any;
    text: string;
    ui: UIElement | UIElement[];
    pleasePay?: any | undefined;
    processes?: string[] | {
        id: string;
        name: string;
        description: string;
        type: "one-time" | "recurring";
    }[];
}
export declare class DainResponse {
    data: any;
    text: string;
    ui: BaseUIElement<any> | BaseUIElement<any>[];
    pleasePay?: any;
    processes?: string[] | {
        id: string;
        name: string;
        description: string;
        type: "one-time" | "recurring";
    }[];
    constructor({ data, text, ui, pleasePay, processes }: DainResponseOptions);
    /**
     * Static constructor to help build a DainResponse in a more fluent style.
     */
    static create(options: DainResponseOptions): DainResponse;
    /**
     * Example method for returning JSON, similar to NextResponse.json().
     */
    toJSON(): {
        data: any;
        text: string;
        ui: BaseUIElement<any> | BaseUIElement<any>[];
        pleasePay: any;
        processes: string[] | {
            id: string;
            name: string;
            description: string;
            type: "one-time" | "recurring";
        }[] | undefined;
    };
}
