"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
/**
 * A DSL builder class that creates a "checkout" UI element,
 * with order details, delivery information, and payment actions.
 */
class CheckoutUIBuilder extends base_builder_1.DSLBuilder {
    constructor(orderId, quoteId, initialProps, renderMode = "inline") {
        super("checkout", Object.assign({ orderId, quoteId }, initialProps), renderMode);
    }
    /**
     * Sets the total cost of the order
     */
    setTotalCost(cost) {
        this.setProp("totalCost", cost);
        return this;
    }
    /**
     * Sets the store information
     */
    setStore(store, storeId) {
        this.setProp("store", store);
        this.setProp("storeId", storeId);
        return this;
    }
    /**
     * Sets the delivery details
     */
    setDeliveryDetails(details) {
        this.setProp("deliveryDetails", details);
        return this;
    }
    /**
     * Defines the action to be triggered when proceeding to payment
     */
    onProceedToPayment(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onProceedToPayment action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "placeOrder"
        });
    }
    /**
     * Defines the action to be triggered when canceling the order
     */
    onCancelOrder(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onCancelOrder action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "cancel-order"
        });
    }
}
exports.CheckoutUIBuilder = CheckoutUIBuilder;
//# sourceMappingURL=checkout.builder.js.map