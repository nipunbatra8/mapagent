import { DSLBuilder } from "../../../base/base.builder";
import { DslAction } from "../../../types";
/**
 * Basic card item definition.
 */
export interface CardItem {
    title: string;
    description: string;
    icon?: string;
}
/**
 * Data for the card list.
 */
export interface CardListData {
    title?: string;
    description?: string;
    cards: CardItem[];
}
/**
 * DSL builder for creating a "cardList" element.
 */
export declare class CardListUIBuilder extends DSLBuilder<CardListData> {
    constructor(initialProps?: Partial<CardListData>, renderMode?: "inline" | "page");
    /**
     * Sets the top-level title for the card list.
     */
    title(title: string): this;
    /**
     * Sets a description for the card list.
     */
    description(desc: string): this;
    /**
     * Add a single card to the list.
     */
    addCard(card: CardItem): this;
    /**
     * Add multiple cards at once.
     */
    addCards(cards: CardItem[]): this;
    /**
     * Defines the tool/action to be triggered on a user confirmation from the card list.
     */
    onConfirm(action: Exclude<Partial<DslAction>, "type" | "paramSchema">): this;
    /**
     * Provide DSL children to this card list element.
     */
    withChildren(child: DSLBuilder<any> | ReturnType<DSLBuilder<any>["build"]>): this;
}
