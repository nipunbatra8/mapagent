import { DSLBuilder } from "../../../base/base.builder";
/**
 * The shape of data that this component deals with.
 */
export interface OrderStatusData {
    status?: string;
    address?: string;
    finalQuote?: {
        subtotal?: number;
        delivery_fee_cents?: number;
        service_fee_cents?: number;
        small_order_fee_cents?: number;
        sales_tax_cents?: number;
        total_without_tips?: number;
        expected_time_of_arrival?: string;
    };
    tracking?: {
        link?: string;
    };
    driver?: {
        name?: string;
        phone?: number;
    };
    storeInfo?: {
        name?: string;
        imageLogo?: string;
    };
}
/**
 * DSL builder for creating an "orderStatus" element.
 */
export declare class OrderStatusUIBuilder extends DSLBuilder<OrderStatusData> {
    constructor(initialProps?: Partial<OrderStatusData>, renderMode?: "inline" | "page");
    /**
     * Define or update the status string (e.g., "Pending", "Out for Delivery").
     */
    setStatus(status: string): this;
    /**
     * Set or update the address where the order is being delivered.
     */
    setAddress(address: string): this;
    /**
     * Modify the final quote details, including subtotal, fees, etc.
     */
    setFinalQuote(finalQuote: NonNullable<OrderStatusData["finalQuote"]>): this;
    /**
     * Provide or update tracking information, e.g., a link.
     */
    setTracking(tracking: NonNullable<OrderStatusData["tracking"]>): this;
    /**
     * Add or modify driver info, e.g., driver's name or phone number.
     */
    setDriver(driver: NonNullable<OrderStatusData["driver"]>): this;
    /**
     * Update store information, e.g., store name and its logo image.
     */
    setStoreInfo(storeInfo: NonNullable<OrderStatusData["storeInfo"]>): this;
    /**
     * Provide DSL children to this orderStatus element.
     */
    withChildren(child: DSLBuilder<any> | ReturnType<DSLBuilder<any>["build"]>): this;
}
