import { DSLBuilder } from "../../../base/base.builder";
type dataKeys = {
    x: string;
    y: string;
    name?: string;
};
export interface ChartUIData<TData> {
    type: 'bar' | 'line' | 'pie';
    title: string;
    description?: string;
    data: TData[];
    dataKeys: dataKeys;
    trend?: {
        value: number;
        text: string;
    };
    footer?: string;
}
export type ChartProps<TData> = Partial<ChartUIData<TData>>;
export declare class ChartUIBuilder<TData> extends DSLBuilder<ChartProps<TData>> {
    constructor(initialProps?: Partial<ChartProps<TData>>, renderMode?: "inline" | "page");
    /**
     * Sets the chart type (bar, line, or pie).
     */
    type(type: 'bar' | 'line' | 'pie'): this;
    /**
     * Sets the title of the chart.
     */
    title(title: string): this;
    /**
     * Sets an optional description for the chart.
     */
    description(description: string): this;
    /**
     * Sets the data array for the chart.
     */
    chartData(data: TData[]): this;
    /**
     * Sets the data keys for mapping data to chart axes.
     */
    dataKeys(dataKeys: dataKeys): this;
    /**
     * Sets optional trend information.
     */
    trend(value: number, text: string): this;
    /**
     * Sets an optional footer text.
     */
    footer(footer: string): this;
}
export {};
