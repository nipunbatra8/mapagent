import { DSLBuilder } from "../../../base/base.builder";
import { DslAction } from "../../../types";
/**
 * Each item on the timeline.
 */
export interface TimeLineItem {
    /**
     * Timestamp or date for the item.
     */
    timestamp: string;
    /**
     * A title or short label for this item on the timeline.
     */
    title?: string;
    /**
     * A description or detailed text for this timeline item.
     */
    description?: string;
}
/**
 * The props we store for the timeline element.
 */
export interface TimeLineProps {
    title?: string;
    description?: string;
    items: TimeLineItem[];
}
/**
 * A DSL builder class that creates a "timeline" UI element,
 * with user-defined items and optional title/description.
 */
export declare class TimeLineUIBuilder extends DSLBuilder<TimeLineProps> {
    constructor(initialProps?: Partial<TimeLineProps>, renderMode?: "inline" | "page");
    /**
     * Set a title for the timeline.
     */
    title(newTitle: string): this;
    /**
     * Set a description or subtitle for the timeline.
     */
    description(newDescription: string): this;
    /**
     * Adds a new item to the timeline.
     */
    addItem(item: TimeLineItem): this;
    /**
     * Add multiple items at once.
     */
    addItems(items: TimeLineItem[]): this;
    /**
     * (Optional) Example: Define an action triggered by a timeline event.
     * You can rename or repurpose this method as needed,
     * similar to how onSubmit is defined in the FormUIBuilder.
     */
    onItemClick(action: Exclude<Partial<DslAction>, "type">): this;
}
