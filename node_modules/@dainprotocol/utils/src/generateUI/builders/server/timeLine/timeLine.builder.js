"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeLineUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
/**
 * A DSL builder class that creates a "timeline" UI element,
 * with user-defined items and optional title/description.
 */
class TimeLineUIBuilder extends base_builder_1.DSLBuilder {
    constructor(initialProps, renderMode = "inline") {
        super("timeline", Object.assign({ items: [] }, initialProps), renderMode);
    }
    /**
     * Set a title for the timeline.
     */
    title(newTitle) {
        this.setProp("title", newTitle);
        return this;
    }
    /**
     * Set a description or subtitle for the timeline.
     */
    description(newDescription) {
        this.setProp("description", newDescription);
        return this;
    }
    /**
     * Adds a new item to the timeline.
     */
    addItem(item) {
        this.element.props.items.push(item);
        return this;
    }
    /**
     * Add multiple items at once.
     */
    addItems(items) {
        items.forEach((item) => this.addItem(item));
        return this;
    }
    /**
     * (Optional) Example: Define an action triggered by a timeline event.
     * You can rename or repurpose this method as needed,
     * similar to how onSubmit is defined in the FormUIBuilder.
     */
    onItemClick(action) {
        const { tool, paramSchema, params } = action;
        if (!tool) {
            throw new Error("onItemClick action must specify a 'tool' (callTool).");
        }
        return this.addAction({
            type: "callTool",
            tool,
            paramSchema,
            params,
            key: "timeline-item-click",
        });
    }
}
exports.TimeLineUIBuilder = TimeLineUIBuilder;
//# sourceMappingURL=timeLine.builder.js.map