"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatsGridUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
/**
 * A DSL builder class that creates a "statsGrid" UI element,
 * with dynamic stats and optional refresh action.
 */
class StatsGridUIBuilder extends base_builder_1.DSLBuilder {
    constructor(initialProps, renderMode = "inline") {
        super("statsGrid", Object.assign({ stats: [] }, initialProps), renderMode);
    }
    /**
     * Sets the title for the stats grid
     */
    title(title) {
        this.setProp("title", title);
        return this;
    }
    /**
     * Sets base parameters that will be used for all stats
     */
    setBaseParams(params) {
        this.setProp("baseParams", params);
        return this;
    }
    /**
     * Adds a single stat to the grid
     */
    addStat(stat) {
        this.element.props.stats.push(stat);
        return this;
    }
    /**
     * Adds multiple stats at once
     */
    addStats(stats) {
        stats.forEach(stat => this.addStat(stat));
        return this;
    }
    onItemClick(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onItemClick action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "onItemClick",
        });
    }
}
exports.StatsGridUIBuilder = StatsGridUIBuilder;
//# sourceMappingURL=statsGrid.builder.js.map