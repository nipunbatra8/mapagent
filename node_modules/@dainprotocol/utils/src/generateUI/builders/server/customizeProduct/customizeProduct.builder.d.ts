import { DSLBuilder } from "../../../base/base.builder";
import { DslAction } from "../../../types";
export interface CustomizationOption {
    name: string;
    price: number;
    optionId: string;
    maxQuantity: number;
    minQuantity: number;
}
export interface Customization {
    name: string;
    customizationId: string;
    requiredAmountOfOptions: '1' | 'multiple';
    options: CustomizationOption[];
}
export interface CustomizeProductProps {
    customizations: Customization[];
}
export declare class CustomizeProductUIBuilder extends DSLBuilder<CustomizeProductProps> {
    constructor(initialProps?: Partial<CustomizeProductProps>, renderMode?: "inline" | "page");
    /**
     * Adds a single customization group
     */
    addCustomization(customization: Customization): this;
    /**
     * Adds multiple customization groups at once
     */
    addCustomizations(customizations: Customization[]): this;
    /**
     * Defines the action to be triggered when an option is selected
     */
    onOptionSelect(action: Exclude<Partial<DslAction>, "type">): this;
    /**
     * Defines the action to be triggered when proceeding with selections
     */
    onProceed(action: Exclude<Partial<DslAction>, "type">): this;
    /**
     * Defines the action to be triggered when skipping customization
     */
    onSkip(action: Exclude<Partial<DslAction>, "type">): this;
}
