import { DSLBuilder } from "../../../base/base.builder";
export interface TableColumn {
    key: string;
    header: string;
    type: string;
}
export interface TableProps {
    columns?: TableColumn[];
    rows?: Array<Record<string, unknown>>;
}
export declare class TableUIBuilder extends DSLBuilder<TableProps> {
    constructor(initialProps?: Partial<TableProps>, renderMode?: "inline" | "page");
    /**
     * Adds a single column to the table.
     */
    addColumn(key: string, header: string, type: string): this;
    /**
     * Overloaded method for adding multiple columns.
     * Allows either an array of TableColumn objects or an array of items with a mapper function.
     */
    addColumns(columns: TableColumn[]): this;
    addColumns<T>(items: T[], mapper: (item: T) => TableColumn): this;
    /**
     * Sets the rows for the table.
     * Each row is an object representing a record.
     */
    rows(rows: Array<Record<string, unknown>>): this;
}
