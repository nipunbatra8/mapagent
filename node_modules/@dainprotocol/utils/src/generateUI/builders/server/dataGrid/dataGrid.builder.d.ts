import { DSLBuilder } from "../../../base/base.builder";
import { DslAction } from "../../../types";
export interface GridColumn {
    field: string;
    header?: string;
    flex?: number;
    sortable?: boolean;
    filter?: boolean | string;
    editable?: boolean;
}
export interface GridProps<T> {
    rows?: T[];
    columns?: GridColumn[];
}
export declare class DataGridUIBuilder<T> extends DSLBuilder<GridProps<T>> {
    constructor(initialProps?: Partial<GridProps<T>>, renderMode?: "inline" | "page");
    /**
     * Adds a single column to the grid.
     */
    addColumn(column: GridColumn): this;
    /**
     * Overloaded method for adding multiple columns.
     * Allows either an array of GridColumn objects or an array of items with a mapper function.
     */
    addColumns(columns: GridColumn[]): this;
    addColumns<T>(items: T[], mapper: (item: T) => GridColumn): this;
    /**
     * Sets the rows for the data grid.
     */
    rows(rows: T[]): this;
    onRowClick(action: Partial<DslAction>): this;
}
