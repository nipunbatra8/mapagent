import { DSLBuilder } from "../../../base/base.builder";
import { DslAction } from "../../../types";
/**
 * A marker on the map.
 */
export interface MapMarker {
    latitude: number;
    longitude: number;
    text: string;
    title?: string;
    description?: string;
}
/**
 * Data for rendering the map.
 */
export interface MapData {
    initialView: {
        latitude: number;
        longitude: number;
        zoom: number;
    };
    markers: MapMarker[];
    /**
     * An optional string to define the map style (e.g., "satellite" or custom).
     */
    mapStyle?: string;
    maxZoom?: number;
    minZoom?: number;
}
/**
 * DSL builder for creating a "map" element.
 */
export declare class MapUIBuilder extends DSLBuilder<MapData> {
    constructor(initialProps?: Partial<MapData>, renderMode?: "inline" | "page");
    /**
     * Sets the initial view (latitude, longitude, zoom).
     */
    setInitialView(latitude: number, longitude: number, zoom: number): this;
    /**
     * Sets map style (could be "satellite", "streets", or any custom style).
     */
    setMapStyle(style: string): this;
    /**
     * Sets the minimum and maximum zoom levels.
     */
    setZoomRange(minZoom?: number, maxZoom?: number): this;
    /**
     * Add a single marker to the map.
     */
    addMarker(marker: MapMarker): this;
    /**
     * Add multiple markers at once.
     */
    addMarkers(markers: MapMarker[]): this;
    /**
     * Example action, triggered on marker click or other map event.
     * You can rename this if you have a different action in mind.
     */
    onMarkerClick(action: Exclude<Partial<DslAction>, "type" | "paramSchema">): this;
    /**
     * Provide DSL children to this map element.
     */
    withChildren(child: DSLBuilder<any> | ReturnType<DSLBuilder<any>["build"]>): this;
}
