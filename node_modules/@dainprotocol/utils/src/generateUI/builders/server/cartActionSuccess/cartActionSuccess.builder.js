"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartActionSuccessUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
/**
 * DSL builder for creating a "cartActionSuccess" element.
 * (No actions here, as requested.)
 */
class CartActionSuccessUIBuilder extends base_builder_1.DSLBuilder {
    constructor(initialProps, renderMode = "inline") {
        super("cartActionSuccess", Object.assign({ itemsChanged: [] }, initialProps), renderMode);
    }
    /**
     * Specify the type of cart action success (e.g., addToCartSuccess).
     */
    setType(type) {
        this.setProp("type", type);
        return this;
    }
    /**
     * Add a single changed item to the "itemsChanged" list.
     */
    addItemChanged(item) {
        if (!this.element.props.itemsChanged) {
            this.element.props.itemsChanged = [];
        }
        this.element.props.itemsChanged.push(item);
        return this;
    }
    /**
     * Add multiple changed items at once.
     */
    addItemsChanged(items) {
        items.forEach((item) => this.addItemChanged(item));
        return this;
    }
    /**
     * Provide DSL children to this cartActionSuccess element.
     */
    withChildren(child) {
        this.addChild(child);
        return this;
    }
}
exports.CartActionSuccessUIBuilder = CartActionSuccessUIBuilder;
//# sourceMappingURL=cartActionSuccess.builder.js.map