import { DSLBuilder } from "../../../base/base.builder";
export interface LayoutProps {
    layoutType?: "row" | "column" | "grid";
    columns?: number;
    gap?: number;
    justifyContent?: "start" | "center" | "end" | "between" | "around" | "evenly";
    alignItems?: "start" | "center" | "end" | "baseline" | "stretch";
    flexWrap?: "nowrap" | "wrap" | "wrap-reverse";
    margin?: string;
    padding?: string;
    backgroundColor?: string;
}
export declare class LayoutUIBuilder extends DSLBuilder<LayoutProps> {
    constructor(initialProps?: Partial<LayoutProps>, renderMode?: "inline" | "page");
    /**
     * Sets the layout type.
     */
    setLayoutType(layoutType: LayoutProps["layoutType"]): this;
    /**
     * Sets how many columns to use (if layoutType is "grid").
     */
    setColumns(columns: number): this;
    /**
     * Sets the gap between items (used for grid or flex).
     */
    setGap(gap: number): this;
    /**
     * Sets the flex justification of items (if layoutType is "row" or "column").
     */
    setJustifyContent(justifyContent: LayoutProps["justifyContent"]): this;
    /**
     * Sets the flex alignment of items (if layoutType is "row" or "column").
     */
    setAlignItems(alignItems: LayoutProps["alignItems"]): this;
    /**
     * Sets whether items should wrap across multiple lines (for flex layouts).
     */
    setFlexWrap(flexWrap: LayoutProps["flexWrap"]): this;
    /**
     * Sets the margin around the layout container.
     */
    setMargin(margin: string): this;
    /**
     * Sets the padding of the layout container.
     */
    setPadding(padding: string): this;
    /**
     * Sets the background color for the layout container.
     */
    setBackgroundColor(color: string): this;
}
