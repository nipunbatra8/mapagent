"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageCardUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
class ImageCardUIBuilder extends base_builder_1.DSLBuilder {
    constructor(imageUrl, initialProps, renderMode = "inline") {
        super("imageCard", Object.assign({ imageUrl }, initialProps), renderMode);
    }
    /**
     * Sets the title for the image card
     */
    title(title) {
        this.setProp("title", title);
        return this;
    }
    /**
     * Sets the description for the image card
     */
    description(description) {
        this.setProp("description", description);
        return this;
    }
    /**
     * Sets the alt text for the image
     */
    imageAlt(alt) {
        this.setProp("imageAlt", alt);
        return this;
    }
    /**
     * Sets the aspect ratio for the image
     */
    aspectRatio(ratio) {
        this.setProp("aspectRatio", ratio);
        return this;
    }
    /**
     * Sets whether to show an overlay on the image
     */
    withOverlay(overlay = true) {
        this.setProp("overlay", overlay);
        return this;
    }
    /**
     * Sets a custom className for styling
     */
    className(className) {
        this.setProp("className", className);
        return this;
    }
    /**
     * Adds a "Learn More" action to the card
     */
    onLearnMore(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onLearnMore action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "open-link"
        });
    }
    /**
     * Adds a "View Gallery" action to the card
     */
    onViewGallery(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onViewGallery action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "view-gallery"
        });
    }
}
exports.ImageCardUIBuilder = ImageCardUIBuilder;
//# sourceMappingURL=imageCard.builder.js.map