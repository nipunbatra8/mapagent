"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderSuccessUIBuilder = void 0;
const base_builder_1 = require("../../../base/base.builder");
class OrderSuccessUIBuilder extends base_builder_1.DSLBuilder {
    constructor(orderId, trackingLink, finalQuote, initialProps, renderMode = "inline") {
        super("orderSuccess", Object.assign({ orderId,
            trackingLink,
            finalQuote, isSandbox: false }, initialProps), renderMode);
    }
    /**
     * Sets whether this is a sandbox/test order
     */
    setSandboxMode(isSandbox) {
        this.setProp("isSandbox", isSandbox);
        return this;
    }
    /**
     * Updates the tracking link for the order
     */
    setTrackingLink(trackingLink) {
        this.setProp("trackingLink", trackingLink);
        return this;
    }
    /**
     * Updates the final quote details
     */
    setFinalQuote(quote) {
        this.setProp("finalQuote", quote);
        return this;
    }
    /**
     * Defines the action to be triggered when tracking the order
     */
    onTrackOrder(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onTrackOrder action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "track-order"
        });
    }
    /**
     * Defines the action to be triggered when viewing order details
     * TODO: Implement this in FE
     */
    onViewDetails(action) {
        const { tool, params, paramSchema } = action;
        if (!tool) {
            throw new Error("onViewDetails action must specify a 'tool'");
        }
        return this.addAction({
            type: "callTool",
            tool,
            params,
            paramSchema,
            key: "view-details"
        });
    }
}
exports.OrderSuccessUIBuilder = OrderSuccessUIBuilder;
//# sourceMappingURL=orderSuccess.builder.js.map