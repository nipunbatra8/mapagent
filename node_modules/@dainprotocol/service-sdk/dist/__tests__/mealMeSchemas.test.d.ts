import { z } from "zod";
export declare const MealMeIdSchema: z.ZodString;
export declare const searchProductOptionsSchema: z.ZodObject<{
    query: z.ZodOptional<z.ZodString>;
    product_id: z.ZodOptional<z.ZodString>;
    store_name: z.ZodOptional<z.ZodString>;
    store_type: z.ZodOptional<z.ZodString>;
    menu_id: z.ZodOptional<z.ZodString>;
    user_latitude: z.ZodDefault<z.ZodNumber>;
    user_longitude: z.ZodDefault<z.ZodNumber>;
    pickup: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    budget: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    upc_codes: z.ZodOptional<z.ZodString>;
    cuisine: z.ZodOptional<z.ZodString>;
    user_street_num: z.ZodDefault<z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>>;
    user_street_name: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    user_city: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    user_state: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    user_zipcode: z.ZodDefault<z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>>;
    user_country: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    fetch_quotes: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    sort: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    fuzzy_search: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    open: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    maximum_miles: z.ZodDefault<z.ZodOptional<z.ZodNumber>>;
    min_lat: z.ZodOptional<z.ZodNumber>;
    max_lat: z.ZodOptional<z.ZodNumber>;
    min_lon: z.ZodOptional<z.ZodNumber>;
    max_lon: z.ZodOptional<z.ZodNumber>;
    dollar_signs: z.ZodOptional<z.ZodNumber>;
    minimum_rating: z.ZodOptional<z.ZodNumber>;
    sale: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    search_in_category: z.ZodOptional<z.ZodString>;
    autocomplete: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    page: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    sort?: string;
    query?: string;
    product_id?: string;
    store_name?: string;
    store_type?: string;
    menu_id?: string;
    user_latitude?: number;
    user_longitude?: number;
    pickup?: boolean;
    budget?: number;
    upc_codes?: string;
    cuisine?: string;
    user_street_num?: string;
    user_street_name?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string;
    user_country?: string;
    fetch_quotes?: boolean;
    fuzzy_search?: boolean;
    open?: boolean;
    maximum_miles?: number;
    min_lat?: number;
    max_lat?: number;
    min_lon?: number;
    max_lon?: number;
    dollar_signs?: number;
    minimum_rating?: number;
    sale?: boolean;
    search_in_category?: string;
    autocomplete?: boolean;
    page?: number;
}, {
    sort?: string;
    query?: string;
    product_id?: string;
    store_name?: string;
    store_type?: string;
    menu_id?: string;
    user_latitude?: number;
    user_longitude?: number;
    pickup?: boolean;
    budget?: number;
    upc_codes?: string;
    cuisine?: string;
    user_street_num?: string | number;
    user_street_name?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string | number;
    user_country?: string;
    fetch_quotes?: boolean;
    fuzzy_search?: boolean;
    open?: boolean;
    maximum_miles?: number;
    min_lat?: number;
    max_lat?: number;
    min_lon?: number;
    max_lon?: number;
    dollar_signs?: number;
    minimum_rating?: number;
    sale?: boolean;
    search_in_category?: string;
    autocomplete?: boolean;
    page?: number;
}>;
export declare const searchStoreOptionsSchema: z.ZodObject<{
    query: z.ZodOptional<z.ZodString>;
    latitude: z.ZodDefault<z.ZodNumber>;
    longitude: z.ZodDefault<z.ZodNumber>;
    store_type: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"restaurant">, z.ZodLiteral<"grocery">, z.ZodLiteral<"">]>>;
    budget: z.ZodDefault<z.ZodNumber>;
    user_street_num: z.ZodOptional<z.ZodString>;
    user_city: z.ZodOptional<z.ZodString>;
    user_state: z.ZodOptional<z.ZodString>;
    user_zipcode: z.ZodOptional<z.ZodString>;
    user_country: z.ZodOptional<z.ZodEnum<["US", "CA"]>>;
    pickup: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    fetch_quotes: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    timeout: z.ZodOptional<z.ZodNumber>;
    sort: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    open: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    dollar_signs: z.ZodOptional<z.ZodNumber>;
    cuisine: z.ZodOptional<z.ZodString>;
    minimum_rating: z.ZodOptional<z.ZodNumber>;
    maximum_miles: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    page: z.ZodOptional<z.ZodNumber>;
    min_lat: z.ZodOptional<z.ZodNumber>;
    max_lat: z.ZodOptional<z.ZodNumber>;
    min_lon: z.ZodOptional<z.ZodNumber>;
    max_lon: z.ZodOptional<z.ZodNumber>;
    search_focus: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    default_quote: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    autocomplete: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    include_utc_hours: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    projections: z.ZodOptional<z.ZodString>;
    use_new_db: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    sort?: string;
    timeout?: number;
    query?: string;
    store_type?: "" | "restaurant" | "grocery";
    pickup?: boolean;
    budget?: number;
    cuisine?: string;
    user_street_num?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string;
    user_country?: "CA" | "US";
    fetch_quotes?: boolean;
    open?: boolean;
    maximum_miles?: number;
    min_lat?: number;
    max_lat?: number;
    min_lon?: number;
    max_lon?: number;
    dollar_signs?: number;
    minimum_rating?: number;
    autocomplete?: boolean;
    page?: number;
    latitude?: number;
    longitude?: number;
    search_focus?: string;
    default_quote?: boolean;
    include_utc_hours?: boolean;
    projections?: string;
    use_new_db?: boolean;
}, {
    sort?: string;
    timeout?: number;
    query?: string;
    store_type?: "" | "restaurant" | "grocery";
    pickup?: boolean;
    budget?: number;
    cuisine?: string;
    user_street_num?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string;
    user_country?: "CA" | "US";
    fetch_quotes?: boolean;
    open?: boolean;
    maximum_miles?: number;
    min_lat?: number;
    max_lat?: number;
    min_lon?: number;
    max_lon?: number;
    dollar_signs?: number;
    minimum_rating?: number;
    autocomplete?: boolean;
    page?: number;
    latitude?: number;
    longitude?: number;
    search_focus?: string;
    default_quote?: boolean;
    include_utc_hours?: boolean;
    projections?: string;
    use_new_db?: boolean;
}>;
export declare const miscFeeSchema: z.ZodObject<{
    fee_name: z.ZodString;
    fee_amount: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    fee_name?: string;
    fee_amount?: number;
}, {
    fee_name?: string;
    fee_amount?: number;
}>;
export declare const addedFeesSchema: z.ZodObject<{
    added_fee_flat: z.ZodOptional<z.ZodNumber>;
    added_fee_percent: z.ZodOptional<z.ZodNumber>;
    is_added_fee_taxable: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    added_fee_flat?: number;
    added_fee_percent?: number;
    is_added_fee_taxable?: boolean;
}, {
    added_fee_flat?: number;
    added_fee_percent?: number;
    is_added_fee_taxable?: boolean;
}>;
export declare const dropoffWindowSchema: z.ZodObject<{
    start_time: z.ZodNumber;
    end_time: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    start_time?: number;
    end_time?: number;
}, {
    start_time?: number;
    end_time?: number;
}>;
export declare const emailReceiptSpecificationsSchema: z.ZodObject<{
    prices_marked: z.ZodOptional<z.ZodBoolean>;
    added_fee: z.ZodOptional<z.ZodObject<{
        added_fee_flat: z.ZodOptional<z.ZodNumber>;
        added_fee_percent: z.ZodOptional<z.ZodNumber>;
        is_added_fee_taxable: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        added_fee_flat?: number;
        added_fee_percent?: number;
        is_added_fee_taxable?: boolean;
    }, {
        added_fee_flat?: number;
        added_fee_percent?: number;
        is_added_fee_taxable?: boolean;
    }>>;
    unify_service_fee: z.ZodOptional<z.ZodBoolean>;
    misc_fees: z.ZodArray<z.ZodObject<{
        fee_name: z.ZodString;
        fee_amount: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        fee_name?: string;
        fee_amount?: number;
    }, {
        fee_name?: string;
        fee_amount?: number;
    }>, "many">;
    disable_email: z.ZodBoolean;
}, "strip", z.ZodTypeAny, {
    prices_marked?: boolean;
    added_fee?: {
        added_fee_flat?: number;
        added_fee_percent?: number;
        is_added_fee_taxable?: boolean;
    };
    unify_service_fee?: boolean;
    misc_fees?: {
        fee_name?: string;
        fee_amount?: number;
    }[];
    disable_email?: boolean;
}, {
    prices_marked?: boolean;
    added_fee?: {
        added_fee_flat?: number;
        added_fee_percent?: number;
        is_added_fee_taxable?: boolean;
    };
    unify_service_fee?: boolean;
    misc_fees?: {
        fee_name?: string;
        fee_amount?: number;
    }[];
    disable_email?: boolean;
}>;
export declare const SMSMessageSetSchema: z.ZodObject<{
    order_placed: z.ZodOptional<z.ZodString>;
    store_confirmed: z.ZodOptional<z.ZodString>;
    pickup_ready: z.ZodOptional<z.ZodString>;
    driver_arriving: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    order_placed?: string;
    store_confirmed?: string;
    pickup_ready?: string;
    driver_arriving?: string;
}, {
    order_placed?: string;
    store_confirmed?: string;
    pickup_ready?: string;
    driver_arriving?: string;
}>;
export declare const SMSOptionsSchema: z.ZodObject<{
    notifications: z.ZodObject<{
        order_placed: z.ZodOptional<z.ZodString>;
        store_confirmed: z.ZodOptional<z.ZodString>;
        pickup_ready: z.ZodOptional<z.ZodString>;
        driver_arriving: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        order_placed?: string;
        store_confirmed?: string;
        pickup_ready?: string;
        driver_arriving?: string;
    }, {
        order_placed?: string;
        store_confirmed?: string;
        pickup_ready?: string;
        driver_arriving?: string;
    }>;
}, "strip", z.ZodTypeAny, {
    notifications?: {
        order_placed?: string;
        store_confirmed?: string;
        pickup_ready?: string;
        driver_arriving?: string;
    };
}, {
    notifications?: {
        order_placed?: string;
        store_confirmed?: string;
        pickup_ready?: string;
        driver_arriving?: string;
    };
}>;
export declare const createOrderOptionsSchema: z.ZodObject<{
    place_order: z.ZodOptional<z.ZodBoolean>;
    order_id: z.ZodOptional<z.ZodString>;
    pickup: z.ZodOptional<z.ZodBoolean>;
    scheduled_id: z.ZodOptional<z.ZodString>;
    driver_tip_cents: z.ZodOptional<z.ZodNumber>;
    pickup_tip_cents: z.ZodOptional<z.ZodNumber>;
    user_latitude: z.ZodOptional<z.ZodNumber>;
    user_longitude: z.ZodOptional<z.ZodNumber>;
    user_street_num: z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>;
    user_street_name: z.ZodOptional<z.ZodString>;
    user_apt_num: z.ZodOptional<z.ZodString>;
    user_city: z.ZodOptional<z.ZodString>;
    user_state: z.ZodOptional<z.ZodString>;
    user_country: z.ZodOptional<z.ZodString>;
    user_zipcode: z.ZodOptional<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber]>, string, string | number>>;
    user_dropoff_notes: z.ZodOptional<z.ZodString>;
    user_pickup_notes: z.ZodOptional<z.ZodString>;
    user_name: z.ZodString;
    user_email: z.ZodString;
    user_phone: z.ZodNumber;
    user_id: z.ZodString;
    payment_method_id: z.ZodOptional<z.ZodString>;
    charge_user: z.ZodOptional<z.ZodBoolean>;
    include_final_quote: z.ZodOptional<z.ZodBoolean>;
    disable_sms: z.ZodOptional<z.ZodBoolean>;
    email_receipt_specifications: z.ZodOptional<z.ZodObject<{
        prices_marked: z.ZodOptional<z.ZodBoolean>;
        added_fee: z.ZodOptional<z.ZodObject<{
            added_fee_flat: z.ZodOptional<z.ZodNumber>;
            added_fee_percent: z.ZodOptional<z.ZodNumber>;
            is_added_fee_taxable: z.ZodOptional<z.ZodBoolean>;
        }, "strip", z.ZodTypeAny, {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        }, {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        }>>;
        unify_service_fee: z.ZodOptional<z.ZodBoolean>;
        misc_fees: z.ZodArray<z.ZodObject<{
            fee_name: z.ZodString;
            fee_amount: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            fee_name?: string;
            fee_amount?: number;
        }, {
            fee_name?: string;
            fee_amount?: number;
        }>, "many">;
        disable_email: z.ZodBoolean;
    }, "strip", z.ZodTypeAny, {
        prices_marked?: boolean;
        added_fee?: {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        };
        unify_service_fee?: boolean;
        misc_fees?: {
            fee_name?: string;
            fee_amount?: number;
        }[];
        disable_email?: boolean;
    }, {
        prices_marked?: boolean;
        added_fee?: {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        };
        unify_service_fee?: boolean;
        misc_fees?: {
            fee_name?: string;
            fee_amount?: number;
        }[];
        disable_email?: boolean;
    }>>;
    sms_options: z.ZodOptional<z.ZodArray<z.ZodObject<{
        notifications: z.ZodObject<{
            order_placed: z.ZodOptional<z.ZodString>;
            store_confirmed: z.ZodOptional<z.ZodString>;
            pickup_ready: z.ZodOptional<z.ZodString>;
            driver_arriving: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        }, {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        notifications?: {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        };
    }, {
        notifications?: {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        };
    }>, "many">>;
    favorited: z.ZodOptional<z.ZodBoolean>;
    enable_substitution: z.ZodOptional<z.ZodBoolean>;
    customer_order_id: z.ZodOptional<z.ZodString>;
    autofill_selected_options: z.ZodOptional<z.ZodBoolean>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    tracking_link: z.ZodOptional<z.ZodString>;
    dropoff_window: z.ZodOptional<z.ZodObject<{
        start_time: z.ZodNumber;
        end_time: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        start_time?: number;
        end_time?: number;
    }, {
        start_time?: number;
        end_time?: number;
    }>>;
}, "strip", z.ZodTypeAny, {
    metadata?: Record<string, string>;
    user_latitude?: number;
    user_longitude?: number;
    pickup?: boolean;
    user_street_num?: string;
    user_street_name?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string;
    user_country?: string;
    place_order?: boolean;
    order_id?: string;
    scheduled_id?: string;
    driver_tip_cents?: number;
    pickup_tip_cents?: number;
    user_apt_num?: string;
    user_dropoff_notes?: string;
    user_pickup_notes?: string;
    user_name?: string;
    user_email?: string;
    user_phone?: number;
    user_id?: string;
    payment_method_id?: string;
    charge_user?: boolean;
    include_final_quote?: boolean;
    disable_sms?: boolean;
    email_receipt_specifications?: {
        prices_marked?: boolean;
        added_fee?: {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        };
        unify_service_fee?: boolean;
        misc_fees?: {
            fee_name?: string;
            fee_amount?: number;
        }[];
        disable_email?: boolean;
    };
    sms_options?: {
        notifications?: {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        };
    }[];
    favorited?: boolean;
    enable_substitution?: boolean;
    customer_order_id?: string;
    autofill_selected_options?: boolean;
    tracking_link?: string;
    dropoff_window?: {
        start_time?: number;
        end_time?: number;
    };
}, {
    metadata?: Record<string, string>;
    user_latitude?: number;
    user_longitude?: number;
    pickup?: boolean;
    user_street_num?: string | number;
    user_street_name?: string;
    user_city?: string;
    user_state?: string;
    user_zipcode?: string | number;
    user_country?: string;
    place_order?: boolean;
    order_id?: string;
    scheduled_id?: string;
    driver_tip_cents?: number;
    pickup_tip_cents?: number;
    user_apt_num?: string;
    user_dropoff_notes?: string;
    user_pickup_notes?: string;
    user_name?: string;
    user_email?: string;
    user_phone?: number;
    user_id?: string;
    payment_method_id?: string;
    charge_user?: boolean;
    include_final_quote?: boolean;
    disable_sms?: boolean;
    email_receipt_specifications?: {
        prices_marked?: boolean;
        added_fee?: {
            added_fee_flat?: number;
            added_fee_percent?: number;
            is_added_fee_taxable?: boolean;
        };
        unify_service_fee?: boolean;
        misc_fees?: {
            fee_name?: string;
            fee_amount?: number;
        }[];
        disable_email?: boolean;
    };
    sms_options?: {
        notifications?: {
            order_placed?: string;
            store_confirmed?: string;
            pickup_ready?: string;
            driver_arriving?: string;
        };
    }[];
    favorited?: boolean;
    enable_substitution?: boolean;
    customer_order_id?: string;
    autofill_selected_options?: boolean;
    tracking_link?: string;
    dropoff_window?: {
        start_time?: number;
        end_time?: number;
    };
}>;
