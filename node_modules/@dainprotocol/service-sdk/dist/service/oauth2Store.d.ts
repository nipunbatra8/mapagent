import Redis from "ioredis";
import { OAuth2TokenStoreAdapter, OAuth2Tokens } from "./types";
export { OAuth2TokenStoreAdapter, OAuth2Tokens };
export declare class InMemoryOAuth2TokenStore implements OAuth2TokenStoreAdapter {
    private tokens;
    constructor();
    private getKey;
    saveTokens(agentId: string, provider: string, tokens: OAuth2Tokens): Promise<void>;
    getTokens(agentId: string, provider: string): Promise<OAuth2Tokens | null>;
    hasValidTokens(agentId: string, provider: string): Promise<boolean>;
    deleteTokens(agentId: string, provider: string): Promise<void>;
}
export declare class RedisOAuth2TokenStore implements OAuth2TokenStoreAdapter {
    private redis;
    private prefix;
    constructor(redis: Redis, prefix?: string);
    private getKey;
    saveTokens(agentId: string, provider: string, tokens: OAuth2Tokens): Promise<void>;
    getTokens(agentId: string, provider: string): Promise<OAuth2Tokens | null>;
    hasValidTokens(agentId: string, provider: string): Promise<boolean>;
    deleteTokens(agentId: string, provider: string): Promise<void>;
}
