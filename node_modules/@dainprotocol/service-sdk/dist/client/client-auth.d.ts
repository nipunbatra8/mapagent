interface DainClientAuthConfig {
    privateKeyBase58?: string;
    agentId?: string;
    orgId?: string;
    apiKey?: string;
    smartAccountPDA?: string;
    webhookUrl?: string;
}
export declare class DainClientAuth {
    private privateKey;
    private agentId;
    private orgId;
    private publicKey;
    private smartAccountPDA?;
    private webhookUrl?;
    constructor(config: DainClientAuthConfig);
    private parseApiKey;
    signRequest(method: string, path: string, body: string): Promise<{
        signature: string;
        timestamp: string;
    }>;
    getHeaders(signature: string, timestamp: string): Record<string, string>;
    signMessage(message: string): string;
    static verifyMessage(message: string, signature: string, publicKey: Uint8Array): boolean;
    getAgentId(): string;
    getOrgId(): string;
    getPublicKey(): Uint8Array;
    getPublicKeyBase58(): string;
    getSmartAccountPDA(): string | undefined;
    getWebhookUrl(): string | undefined;
    serialize(): string;
    static deserialize(serialized: string): DainClientAuth;
}
export {};
